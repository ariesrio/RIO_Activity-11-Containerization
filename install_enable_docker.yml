---
- name: Install and enable Docker on all nodes
  hosts: all
  become: yes
  vars:
    docker_users:
      - "{{ ansible_user }}"

  tasks:
    - name: Ensure system packages are updated (Ubuntu/Debian)
      apt:
        update_cache: yes
      when: ansible_os_family == "Debian"

    - name: Ensure system packages are updated (CentOS/RHEL)
      yum:
        name: "*"
        state: latest
      when: ansible_os_family == "RedHat"

    - name: Install dependencies for Docker (Ubuntu)
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
        state: present
      when: ansible_os_family == "Debian"

    - name: Add Docker GPG key (Ubuntu)
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
      when: ansible_os_family == "Debian"

    - name: Add Docker repository (Ubuntu)
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present
      when: ansible_os_family == "Debian"

    - name: Install Docker Engine (Ubuntu)
      apt:
        name: docker-ce
        state: present
        update_cache: yes
      when: ansible_os_family == "Debian"

    - name: Install dependencies and Docker (CentOS)
      yum:
        name:
          - yum-utils
        state: present
      when: ansible_os_family == "RedHat"

    - name: Add Docker repository (CentOS)
      command: >
        yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
      args:
        creates: /etc/yum.repos.d/docker-ce.repo
      when: ansible_os_family == "RedHat"

    - name: Install Docker Engine (CentOS)
      yum:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: present
      when: ansible_os_family == "RedHat"

    - name: Start and enable Docker socket on all nodes
      service:
        name: docker
        state: started
        enabled: yes

    - name: Ensure Docker socket permissions allow user access
      file:
        path: /var/run/docker.sock
        owner: root
        group: docker
        mode: "0660"

    - name: Add current user to Docker group
      user:
        name: "{{ ansible_user }}"
        groups: docker
        append: yes
